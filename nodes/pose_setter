#!/usr/bin/env python
#The line above is important so that this file is interpreted with Python when running it.

# import of relevant libraries.
import rospy # module for ROS APIs
from math import pi;
from geometry_msgs.msg import PoseWithCovarianceStamped # message type for initialpose

# Constants.
NEW_INITAL_POSE_TOPIC = '/initialpose'
FREQUENCY = 10 #Hz.

class PoseSetter():
  def __init__(self):
    """Constructor."""
    self.inital_pose_pub = rospy.Publisher(NEW_INITAL_POSE_TOPIC,
                                           PoseWithCovarianceStamped,
                                           queue_size=1)
    self.fixed_frame = rospy.get_namespace()
    self.initial_x = rospy.get_param(self.fixed_frame + 'pose_setter/initial_x')
    self.initial_y = rospy.get_param(self.fixed_frame + 'pose_setter/initial_y')
    self.initial_theta = rospy.get_param(self.fixed_frame + 'pose_setter/initial_theta')
  
  def setting_pose(self):
    rate = rospy.Rate(FREQUENCY)
    while not rospy.is_shutdown():
      pose = PoseWithCovarianceStamped()
      pose.header.frame_id = self.fixed_frame
      pose.header.stamp = rospy.get_rostime()
      pose.pose.pose.position.x = self.initial_x
      pose.pose.pose.position.y = self.initial_y
      pose.pose.pose.position.z = 0.0
      pose.pose.pose.orientation.x = 0.0
      pose.pose.pose.orientation.y = 0.0
      pose.pose.pose.orientation.z = self.initial_theta
      pose.pose.covariance[6*0+0] = 0.5 * 0.5
      pose.pose.covariance[6*1+1] = 0.5 * 0.5
      pose.pose.covariance[6*5+5] = pi/12.0 * pi/12.0
      self.inital_pose_pub.publish(pose)
      rate.sleep()

def main():
  """Main function."""

  # 1st. initialization of node.
  rospy.init_node("pose_setter")

  # Sleep for a few seconds to wait for the registration.
  rospy.sleep(2)

  # Initialization of the class for the regular polygon motion.
  br = PoseSetter()
    
  try:
    br.setting_pose()

  except rospy.ROSInterruptException:
    rospy.logerr("ROS node interrupted.")

if __name__ == "__main__":
  """Run the main function."""
  main()
